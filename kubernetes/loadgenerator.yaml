apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loadgenerator
spec:
  serviceName: loadgenerator
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
        component: locust-metrics
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        name: frontend-check
        image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/busybox:latest
        imagePullPolicy: Always
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
      containers:
      - name: server
        image: 223.193.36.130/library/loadgenerator:locust
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 8089
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "20"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - name: locust-exporter
        image: 223.193.36.130/library/locust:1.0.2
        imagePullPolicy: Always
        ports:
        - name: metrics
          containerPort: 9646
---
apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
spec:
  type: ClusterIP
  ports:
  - port: 8089
    targetPort: web
  selector:
    app: loadgenerator
